{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Preloader.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/utils.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/ConfirmationPopup.js","components/AddPlacePopup.js","components/App.js","index.js"],"names":["Header","props","className","src","logo","alt","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","onCardClick","onCardDelete","aria-label","type","onCardLike","length","Preloader","Main","cards","isLoadingCards","isLoadingUserInfo","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","Footer","Date","getFullYear","ImagePopup","e","target","classList","contains","onClose","handleOriginalResponse","res","ok","json","Promise","reject","status","api","options","this","baseUrl","headers","fetch","then","userInfo","method","body","JSON","stringify","cardInfo","cardId","setLike","avatarLink","authorization","PopupWithForm","isOpened","title","action","onSubmit","noValidate","children","buttonText","EditProfilePopup","isOpen","onUpdateUser","isLoadingButtonText","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","value","onChange","minLength","maxLength","placeholder","autoComplete","required","EditAvatarPopup","onUpdateAvatar","inputAvatar","useRef","current","ref","ConfirmationPopup","AddPlacePopup","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","selectedCard","setSelectedCard","setCurrentUser","deletedCard","setDeletedCard","setCards","setIsLoadingCards","setIsLoadingUserInfo","setIsLoadingButtonText","closeAllPopups","getInitialCards","initialCards","catch","err","console","error","finally","handleEscClose","key","document","addEventListener","removeEventListener","getUserInfo","data","Provider","changeLikeCardStatus","newCard","c","editProfile","addCard","deleteCard","filter","updateAvatar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc56f383.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import logo from \"../images/logo.svg\";\n\nfunction Header(props) {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt=\"Логотип\"/>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {useContext} from \"react\";\n\nfunction Card(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `button ${isOwn ? 'button_type_delete' : 'button_hidden'}`\n  );\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `button ${isLiked ? 'button_type_like-black' : 'button_type_like'}`\n  );\n\n  function handleImageClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card)\n  }\n\n  return (\n    <article className=\"card\">\n      <img className=\"card__image\" src={props.card.link} alt={props.card.name} onClick={handleImageClick}/>\n      <button className={cardDeleteButtonClassName} onClick={handleDeleteClick} aria-label=\"Удалить\" type=\"button\"/>\n      <div className=\"card__description\">\n        <h2 className=\"card__name\">{props.card.name}</h2>\n        <div className=\"card__likes\">\n          <button className={cardLikeButtonClassName} onClick={handleLikeClick} aria-label=\"Лайк\" type=\"button\"/>\n          <span className=\"card__like-counter\">{props.card.likes.length ? props.card.likes.length : ''}</span>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default Card;","export default function Preloader({className}) {\n  return (\n    <div className={className}>\n      <div/>\n      <div/>\n    </div>\n  )\n}","import {useContext} from 'react';\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport Preloader from \"./Preloader\";\n\nfunction Main({\n                cards,\n                isLoadingCards,\n                isLoadingUserInfo,\n                onEditAvatar,\n                onEditProfile,\n                onAddPlace,\n                onCardClick,\n                onCardLike,\n                onCardDelete\n              }) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"main\">\n      <div className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__photo\"/>\n          <button onClick={onEditAvatar} className=\"profile__edit-avatar\"/>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__name-wrap\">\n            <div\n              className={`preloader preloader_type_text preloader_type_text-long ${!isLoadingUserInfo && 'preloader_hidden'}`}/>\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <div\n              className={`preloader preloader_type_text preloader_type_text-short ${!isLoadingUserInfo && 'preloader_hidden'}`}/>\n            <button\n              onClick={onEditProfile}\n              className=\"button button_type_edit\"\n              aria-label=\"Редактировать\"\n              type=\"button\"/>\n          </div>\n          <p className=\"profile__feature\">{currentUser.about}</p>\n        </div>\n        <button\n          onClick={onAddPlace}\n          className=\"button button_type_add\"\n          aria-label=\"Добавить фото\"\n          type=\"button\"/>\n      </div>\n      {/*Индикатор загрузки карточек*/}\n      {isLoadingCards  &&  <Preloader className={`preloader preloader_type_image lds-ripple`}/>}\n\n      <section className=\"cards-list\">\n        {cards.map(card => (\n          <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike}\n                onCardDelete={onCardDelete}/>\n        ))}\n      </section>\n    </main>\n  )\n}\n\nexport default Main;","function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&#169; {new Date().getFullYear()} Mesto by Kamenev Nikolay</p>\n        </footer>\n    )\n}\n\nexport default Footer;","function ImagePopup(props) {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.card && 'popup_opened'}`} onClick={(e) => {\n      if (e.target.classList.contains('popup')) props.onClose()\n    }}>\n      <div className=\"popup__image-wrapper\">\n        <button\n          className=\"button button_type_close button_type_close-image\"\n          aria-label=\"Закрыть\"\n          onClick={props.onClose}/>\n        <figure className=\"popup__figure\">\n          <img className=\"popup__fig-image\" src={props.card && props.card.link} alt={props.card && props.card.name}/>\n          <figcaption className=\"popup__fig-caption\">{props.card && props.card.name}</figcaption>\n        </figure>\n      </div>\n    </div>\n  )\n}\n\nexport default ImagePopup;","const handleOriginalResponse = (res) => {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n}\n\nexport default handleOriginalResponse;","import handleOriginalResponse from './utils.js';\n\nclass Api {\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    getUserInfo() {\n        return fetch(`${this.baseUrl}/users/me`, {\n            headers: this.headers\n        }).then(handleOriginalResponse);\n    }\n\n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards/`, {\n            headers: this.headers\n        }).then(handleOriginalResponse);\n    }\n\n    editProfile(userInfo) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: userInfo.name,\n                about: userInfo.about\n            })\n        }).then(handleOriginalResponse);\n    }\n\n    addCard(cardInfo) {\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: cardInfo.name,\n                link: cardInfo.link\n            })\n        }).then(handleOriginalResponse);\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this.headers,\n        }).then(handleOriginalResponse);\n    }\n\n    changeLikeCardStatus(cardId, setLike) {\n        if (setLike) {\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'PUT',\n                headers: this.headers,\n            })\n              .then(handleOriginalResponse);\n        } else {\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers,\n            })\n              .then(handleOriginalResponse);\n        }\n    }\n\n    updateAvatar(avatarLink) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: avatarLink\n            })\n        }).then(handleOriginalResponse);\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n    headers: {\n        authorization: 'af47fd49-b31e-4449-b574-1e5cb0a80b14',\n        'Content-Type': 'application/json',\n    }\n})\n\nexport default api;","function PopupWithForm(props) {\n    return (\n        <div className={`popup popup_type_${props.name} ${props.isOpened && 'popup_opened'}`} onClick={(e) => { if (e.target.classList.contains('popup')) props.onClose() }}>\n            <div className=\"popup__container\">\n                <button\n                    className=\"button button_type_close \"\n                    aria-label=\"Закрыть\"\n                    onClick={props.onClose}/>\n                <h2 className=\"popup__title\">{props.title}</h2>\n                <form name={props.name} action=\"#\" className=\"popup__form\" onSubmit={props.onSubmit} noValidate>\n                    {props.children}\n                    <button\n                        type='submit'\n                        className=\"button button_type_submit\">{props.buttonText}</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm;","import {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {useContext, useEffect, useState} from \"react\";\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, isLoadingButtonText}) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(currentUser.name);\n  const [description, setDescription] = useState(currentUser.about);\n\n  function handleChangeName(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleChangeDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"person\"\n      title=\"Редактировать профиль\"\n      buttonText={isLoadingButtonText ? 'Сохранение...' : 'Сохранить'}\n    >\n      <label className=\"popup__label\">\n        <input\n          id='name'\n          type='text'\n          value={name}\n          onChange={handleChangeName}\n          minLength='2'\n          maxLength='40'\n          name='name'\n          className='popup__input popup__input_type_name'\n          placeholder=\"Имя\"\n          autoComplete=\"off\"\n          required/>\n        <span id='name-error' className='popup__error'/>\n      </label>\n      <label className=\"popup__label\">\n        <input\n          id='feature'\n          type='text'\n          value={description}\n          onChange={handleChangeDescription}\n          minLength='2'\n          maxLength='200'\n          name='feature'\n          className='popup__input popup__input_type_feature'\n          placeholder=\"Вид деятельности\"\n          autoComplete=\"off\"\n          required/>\n        <span id='feature-error' className='popup__error'/>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;","import PopupWithForm from \"./PopupWithForm\";\nimport {useRef} from \"react\";\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, isLoadingButtonText}) {\n  const inputAvatar = useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: inputAvatar.current.value\n    });\n    inputAvatar.current.value = '';\n  }\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"update-avatar\"\n      title=\"Обновить аватар\"\n      buttonText={isLoadingButtonText ? 'Сохранение...' : 'Сохранить'}\n    >\n      <label className=\"popup__label\">\n        <input\n          id=\"edit-avatar\"\n          type=\"url\"\n          ref={inputAvatar}\n          name=\"avatar\"\n          required\n          className=\"popup__input\"\n          placeholder=\"Введите ссылку на фото\"\n          autoComplete=\"off\"/>\n        <span id='edit-avatar-error' className='popup__error'/>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import PopupWithForm from \"./PopupWithForm\";\n\nfunction ConfirmationPopup({card, isOpen, onClose, onCardDelete, isLoadingButtonText}) {\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onCardDelete(card._id);\n  }\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"delete-card\"\n      title=\"Вы уверены?\"\n      buttonText={isLoadingButtonText ? 'Удаление...' : 'Да'}\n    >\n    </PopupWithForm>\n  )\n}\n\nexport default ConfirmationPopup;","import PopupWithForm from \"./PopupWithForm\";\nimport {useState} from 'react';\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace, isLoadingButtonText}) {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  function handleCardNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleCardLinkChange(evt) {\n    setLink(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace({\n      name,\n      link\n    });\n    setName('');\n    setLink('');\n  }\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name='place'\n      title='Новое место'\n      buttonText={isLoadingButtonText ? 'Сохранение...' : 'Создать'}\n    >\n      <label className=\"popup__label\">\n        <input\n          id='place-name'\n          value={name}\n          onChange={handleCardNameChange}\n          type='text'\n          minLength='2'\n          maxLength='30'\n          name='name'\n          className='popup__input'\n          required\n          placeholder='Название'/>\n        <span id='place-name-error' className='popup__error'/>\n      </label>\n      <label className=\"popup__label\">\n        <input\n          id='place-link'\n          value={link}\n          onChange={handleCardLinkChange}\n          type='url'\n          name='link'\n          className='popup__input'\n          required\n          placeholder='Ссылка на картинку'/>\n        <span id='place-link-error' className='popup__error'/>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import {useState, useEffect} from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);        // Стейт попап редактирования профиля открыт\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);              // Стейт попап добавить карточку открыт\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);          // Стейт попап редактирования аватара открыт\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);      // Стейт попап подтверждения удаления карточки открыт\n  const [selectedCard, setSelectedCard] = useState(null);                             // Стейт выбранная карточка для передачи картинки карточки в попап\n  const [currentUser, setCurrentUser] = useState({name: '', about: ''});              // Стейт данные текущего пользователя\n  const [deletedCard, setDeletedCard] = useState(null);                               // Стейт выбранная карточка для удаления\n  const [cards, setCards] = useState([]);                                             // Стейт массив карточек\n  const [isLoadingCards, setIsLoadingCards] = useState(true);                         // Стейт прелоадер загрузки карточек\n  const [isLoadingUserInfo, setIsLoadingUserInfo] = useState(true);                   // Стейт прелоадер загрузки информации пользователя\n  const [isLoadingButtonText, setIsLoadingButtonText] = useState(false);              // Стейт надпись на кнопке при сохранении контента\n\n  // Обработчик клика по аватару\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  // Обработчик клика по кнопке редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  // Обработчик клика по кнопке добавить карточку\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  // Обработчик клика по кнопке удалить карточку\n  function handleCardDelete(card) {\n    setIsConfirmationPopupOpen(true);\n    setDeletedCard(card);\n  }\n\n  // Функция закрытия всех попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmationPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  // Обработчик клика по картинке карточки\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // Обработчик обновления информации пользователя\n  function handleUpdateUser(userInfo) {\n    setIsLoadingButtonText(true);\n    api.editProfile(userInfo)\n      .then(data => {\n        setCurrentUser({...data});\n        closeAllPopups();\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        setIsLoadingButtonText(false);\n      })\n  }\n\n  // Обработчик обновления аватара\n  function handleUpdateAvatar({avatar}) {\n    setIsLoadingButtonText(true);\n    api.updateAvatar(avatar)\n      .then(data => {\n        setCurrentUser({...data});\n        closeAllPopups();\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        setIsLoadingButtonText(false);\n      })\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then(newCard => {\n        setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n      })\n      .catch(err => console.error(err));\n  }\n\n  // Обработчик подтверждения удаления карточки\n  function handleCardDeleteSubmit(cardId) {\n    setIsLoadingButtonText(true);\n    api.deleteCard(cardId)\n      .then(() => {\n        setCards(cards.filter(c => c._id !== cardId));\n        closeAllPopups();\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        setIsLoadingButtonText(false);\n      })\n  }\n\n  // Обработчик добавления карточки\n  function handleAddPlaceSubmit(cardInfo) {\n    setIsLoadingButtonText(true);\n    api.addCard(cardInfo)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        setIsLoadingButtonText(false);\n      })\n  }\n\n  // Загрузка карточек по умолчанию\n  useEffect(() => {\n    api.getInitialCards()\n      .then(initialCards => {\n        setCards(initialCards);\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        setIsLoadingCards(false);\n      })\n  }, []);\n\n  // Добавить/удалить слушателя нажатия Esc при открытии попапа\n  useEffect(() => {\n    function handleEscClose(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n\n    (isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isConfirmationPopupOpen || selectedCard) && document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    }\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, isConfirmationPopupOpen, selectedCard]);\n\n  // Загрузка данных пользователя\n  useEffect(() => {\n    api.getUserInfo()\n      .then(data => {\n        setCurrentUser({...data});\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        setIsLoadingUserInfo(false);\n      })\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header/>\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            cards={cards}\n            isLoadingCards={isLoadingCards}\n            isLoadingUserInfo={isLoadingUserInfo}\n          />\n          <Footer/>\n          {/*Попап редактировать профиль*/}\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            buttonText='Сохранить'\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n            isLoadingButtonText={isLoadingButtonText}/>\n          {/*Попап добавить карточку*/}\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n            isLoadingButtonText={isLoadingButtonText}/>\n          {/*Попап картинка*/}\n          <ImagePopup\n            card={selectedCard}\n            onClose={closeAllPopups}/>\n          {/*Попап удаления карточки*/}\n          <ConfirmationPopup\n            isOpen={isConfirmationPopupOpen}\n            onClose={closeAllPopups}\n            onCardDelete={handleCardDeleteSubmit}\n            card={deletedCard}\n            isLoadingButtonText={isLoadingButtonText}/>\n          {/*Попап обновить аватар*/}\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n            isLoadingButtonText={isLoadingButtonText}/>\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}